{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","LENGTH","length","ALPHABET","localeCompare","reverse","App","useState","NONE","setSortType","setisReversed","className","type","classNames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAiBzB,OAfAG,EAAaC,MAAK,SAACC,EAAeC,GAChC,OAAQL,GACN,KAAKJ,EAASU,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAC9B,KAAKX,EAASY,SACZ,OAAOJ,EAAMK,cAAcJ,GAC7B,QACE,OAAO,MAITJ,GACFC,EAAaQ,UAGRR,G,SAhCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMe,EAAgB,WAC3B,MAAgCC,mBAAShB,EAASiB,MAAlD,mBAAOb,EAAP,KAAiBc,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBc,EAAnB,KAUA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYlB,IAAaJ,EAASY,WAGtCW,QApBY,kBAAML,EAAYlB,EAASY,WAWzC,iCAcA,wBACES,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYlB,IAAaJ,EAASU,SAGtCa,QAjCU,kBAAML,EAAYlB,EAASU,SAwBvC,4BAcA,wBACEW,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAajB,IAGjBkB,QA9CS,kBAAMJ,GAAc,SAAAK,GAAO,OAAKA,MAqC3C,sBAcEpB,IAAaJ,EAASiB,MAAQZ,IAC9B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAtDI,WACZL,EAAYlB,EAASiB,MACrBE,GAAc,IAiDR,sBAUJ,6BACE,6BACGjB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CoB,KAAI,SAAAC,GACH,OACE,oBACE,UAAQ,OADV,SAIGA,GAFIA,cC7HvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.94d1b701.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1: string, good2: string) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setisReversed] = useState(false);\n\n  const setAlphabet = () => setSortType(SortType.ALPHABET);\n  const setLength = () => setSortType(SortType.LENGTH);\n  const setOrder = () => setisReversed(current => !current);\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setisReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={setAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={setLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={setOrder}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map(good => {\n              return (\n                <li\n                  data-cy=\"Good\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              );\n            })}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}